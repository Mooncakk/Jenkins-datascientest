pipeline{
    agent any

    environment {
                GITHUB_TOKEN  = credentials('github_tok')
                REPO_OWNER = 'mooncakk'
                REPO_NAME = 'jenkins-datascientest'
    }
    parameters {
        string(
            name: 'BRANCH_NAME',
            defaultValue: 'staging',
            description: 'Source branch for the pull request'
        )
        string(
            name: 'BASE_BRANCH',
            defaultValue: 'main',
            description: 'Target branch for the pull request'
        )
        string(
            name: 'MERGE_METHOD',
            defaultValue: 'squash',
            description: 'Auto-merge method to use'
        )
    }

    stages {

        stage('Create Pull Request') {
            steps {
                script {
                    echo "Creating pull request from ${params.BRANCH_NAME} to ${params.BASE_BRANCH}"
                    sh 'echo Bearer $GITHUB_TOKEN'
                    // Step 1: Create PR using GitHub REST API
                    def prResponse = httpRequest(
                        httpMode: 'POST',
                        url: "https://api.github.com/repos/${REPO_OWNER}/${REPO_NAME}/pulls",
                        customHeaders: [
                            [name: 'Authorization', value: "Bearer $GITHUB_TOKEN"],
                            [name: 'Accept', value: 'application/vnd.github.v3+json'],
                            [name: 'X-GitHub-Api-Version', value: '2022-11-28']
                        ],
                        contentType: 'APPLICATION_JSON',
                        validResponseCodes: '200:299',
                        requestBody: """{
                            "title": "Auto merge to main",
                            "body": "## Auto-Merge:\\nThis PR will automatically merge when all checks pass.\\n\\n---\\n*Created by Jenkins Build #${BUILD_NUMBER}*",
                            "head": "${params.BRANCH_NAME}",
                            "base": "${params.BASE_BRANCH}"
                        }"""
                    )
                    // Extract PR details from response
                    def prData = readJSON text: prResponse.content
                    env.PR_NUMBER = prData.number
                    env.PR_NODE_ID = prData.node_id
                    //env.PR_URL = prData.html_url

                    echo "Pull Request created successfully!"
                    echo "PR Number: #${env.PR_NUMBER}"
                    //echo "ðŸ”— PR URL: ${env.PR_URL}" A SUPPRIMER
                    //echo "ðŸ†” Node ID: ${env.PR_NODE_ID}"
                }
            }
        }
    }
    post {
        success {
            script {
                echo """
                SUCCESS: Pull Request Created!

                Summary:
                - PR Number: #${env.PR_NUMBER}
                - PR URL: ${env.PR_URL}
                - Source Branch: ${params.BRANCH_NAME}
                - Target Branch: ${params.BASE_BRANCH}
                //- Auto-Merge: Enabled (${params.MERGE_METHOD})
                //- Enabled At: ${env.AUTO_MERGE_ENABLED_AT}
                """
            }
        }
    }
}